
@import 'naturalcrit/styles/reset.less';
//@import 'naturalcrit/styles/elements.less';
@import 'naturalcrit/styles/animations.less';
@import 'naturalcrit/styles/colors.less';
@import 'naturalcrit/styles/tooltip.less';
@font-face {
	font-family : 'CodeLight';
	src         : data-uri('naturalcrit/styles/CODE Light.otf') format('opentype');
}
@font-face {
	font-family : 'CodeBold';
	src         : data-uri('naturalcrit/styles/CODE Bold.otf') format('opentype');
}
html,body, #reactRoot{
	height      : 100vh;
	min-height  : 100vh;
	margin      : 0;
	font-family : 'Open Sans', sans-serif;
}
*{
	box-sizing : border-box;
}
.colorButton(@backgroundColor : @green){
	.animate(background-color);
	display          : inline-block;
	padding          : 0.6em 1.2em;
	cursor           : pointer;
	background-color : @backgroundColor;
	font-family      : 'Open Sans', sans-serif;
	font-size        : 0.8em;
	font-weight      : 800;
	color            : white;
	text-decoration  : none;
	text-transform   : uppercase;
	border           : none;
	outline          : none;
	&:hover{
		background-color : darken(@backgroundColor, 5%);
	}
	&:active{
		background-color : darken(@backgroundColor, 10%);
	}
	&:disabled{
		background-color : @silver !important;
	}
}

// add `.sr-only` to any individual element to hide it
// from visual users, but still available to all screen-readers
.sr-only {
	.screen-reader-only();
}

// import `core.less` to any stylesheet and then use
// `.screen-reader-only()` in any ruleset to apply these properties
// to another selector. 
.screen-reader-only(){
	clip: rect(0 0 0 0); 
	clip-path: inset(50%);
	height: 1px;
	overflow: hidden;
	position: absolute;
	white-space: nowrap; 
	width: 1px;
}
