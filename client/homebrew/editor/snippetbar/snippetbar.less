@import (less) './client/icons/customIcons.less';
@import (less) '././././themes/fonts/5e/fonts.less';
@import (less) 'naturalcrit/styles/core.less';

#editor-bar.menu-bar {
	display          : grid;
	grid-template-columns: min-content auto;
	grid-template-rows: min-content;
	grid-template-areas: "tabs tools";
	&:has(#brew-tab[aria-selected='true']){
		border-bottom: 4px solid @orangeLight;
	}
	&:has(#style-tab[aria-selected='true']){
		border-bottom: 4px solid @blueLight;
	}
	&:has(#snippet-tab[aria-selected='true']){
		border-bottom: 4px solid @purpleLight;
	}
	&:has(#meta-tab[aria-selected='true']){
		border-bottom: 4px solid @greenLight;
	}
}

#snippet-bar.menu-bar {
	display          : grid;
	grid-template-columns: auto;
	grid-template-rows: min-content;
	grid-template-areas: "snippets";
	justify-content:start;

}

#snippet-bar.menu-bar, #editor-bar.menu-bar {
	--menubar-color  : #DDDDDD;
	--menubar-border : 1px solid #666;
	--menubar-shadow : 0 0px 4px -1px black;
	--menubar-accent : #AAAAAA;
	color            : black;
	background-color : var(--menubar-color);
	text-transform   : uppercase;
	font-weight      : 600;
	box-shadow       : var(--menubar-shadow);
	border-bottom    : var(--menubar-border);
	z-index          : 5000;
	.menu-wrapper:has(:popover-open) > [popovertarget]{
		background-color: var(--menubar-accent);
	}
	.menu-item {
		padding: 0 5px;
		&:hover {
			background-color:#c3c3c3 ;
		}
	}


	&.compact {
		.menu-section > .menu-wrapper > .menu-item.compact {
			grid-template-areas: "icon icon caret";
			> .name, > .menu-name {
				display: none;
			}
		}
		.menu-section > .menu-item.compact {
			grid-template-columns+: min(min-content, 40px);
			grid-template-areas: "icon";
			> .name, > .menu-name {
				display: none;
			}
		}
	}

	.menu-list {
		background-color: var(--menubar-color);
		box-shadow: var(--menubar-shadow);
		border: var(--menubar-border);
		.menu-item {
			column-gap: 10px;
			.beta {
				padding       : 4px 6px;
				margin-left   : 5px;
				font-size     : 0.9em;
				line-height   : 1em;
				color         : white;
				background    : grey;
				border-radius : 12px;
			}

			&:has(i.font) {
				column-gap: 3ch;
			}
			i.font {
				height : auto;
				&::before {
					font-size : 1em;
					content   : 'ABC';
				}

				&.OpenSans {font-family : 'OpenSans';}
				&.CodeBold {font-family : 'CodeBold';}
				&.CodeLight {font-family : 'CodeLight';}
				&.ScalySansRemake {font-family : 'ScalySansRemake';}
				&.BookInsanityRemake {font-family : 'BookInsanityRemake';}
				&.MrEavesRemake {font-family : 'MrEavesRemake';}
				&.SolberaImitationRemake {font-family : 'SolberaImitationRemake';}
				&.ScalySansSmallCapsRemake {font-family : 'ScalySansSmallCapsRemake';}
				&.WalterTurncoat {font-family : 'WalterTurncoat';}
				&.Lato {font-family : 'Lato';}
				&.Courier {font-family : 'Courier';}
				&.NodestoCapsCondensed {font-family : 'NodestoCapsCondensed';}
				&.Overpass {font-family : 'Overpass';}
				&.Davek {font-family : 'Davek';}
				&.Iokharic {font-family : 'Iokharic';}
				&.Rellanic {font-family : 'Rellanic';}
				&.TimesNewRoman {font-family : 'Times New Roman';}
			}
		}
	}

	:disabled { color: #999999; }

	#snippets.menu-section {
		gap: 0 8px;
		flex-wrap: wrap;
		justify-content: flex-start;
	}

	.menu-hr {
		padding : 0 4px;
	}

	.highlight(@color: #999999) {
		&[aria-selected='true']{
			background-color : @color;
			color: whitesmoke;
			border: 1px solid white;
			border-bottom: none;
			box-sizing: border-box;
			z-index: 2;
			box-shadow: 0 -2px 4px #666;
		}
	}

	// group that holds all non-snippet buttons.
	#snippets {
		grid-area: snippets;
	}

	#editor-tabs {
		grid-area: tabs;

		// editor tabs
				#brew-tab { 
					.highlight(@orangeLight);
					.tooltipLeft('Brew Editor');
					background-color: oklch(from @orangeLight l .05 h);
				}
				#style-tab { 
					.highlight(@blueLight);
					.tooltipLeft('Style Editor');
					background-color: oklch(from @blueLight l .05 h);
				}
				#snippet-tab { 
					.highlight(@purpleLight);
					.tooltipLeft('Snippets Editor');
					background-color: oklch(from @purpleLight l .05 h);
				}
				#meta-tab { 
					.highlight(@tealLight);
					.tooltipLeft('Properties');
					background-color: oklch(from @tealLight l .05 h);
				}	
	}
	#editor-tools {
		grid-area: tools;
		justify-content: end;

		


		// subgroups for tools (history, code folding/theme, editor tabs)
		> .tool-group {

			> .menu-wrapper > .menu-item, &:not(#editor-tabs) > .menu-item {
				gap : 0;
				.menu-name, .name, .caret {
					.screen-reader-only();
				}
			}
			
			// history tools
			#history-menu { .tooltipLeft('History'); }

			// any non-snippet button
			 button {
				&:not(* .menu-list .menu-item){
					aspect-ratio: 1 / 1;
					grid-template-columns: 1fr;
				}
				&#undo { .tooltipLeft('Undo'); }
				&#redo { .tooltipLeft('Redo'); }

				// code tools
				&#fold-all { .tooltipLeft('Fold All'); }
				&#unfold-all { .tooltipLeft('Unfold All'); }
				&#show-themes { .tooltipLeft('Editor Themes'); }

							
			}			
		}
				// Add container query for narrow state
		@container tools (max-width: 450px) {
			.menu-item {
				gap: 0 !important;
				.name {
					.screen-reader-only();
				}
			}
		}
	}
}